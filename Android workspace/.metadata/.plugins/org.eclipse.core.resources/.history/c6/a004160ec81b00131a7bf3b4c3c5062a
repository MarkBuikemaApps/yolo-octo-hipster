package com.markbuikema.juliana32.adapter;

import android.content.Context;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentStatePagerAdapter;
import android.support.v4.view.ViewPager;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import com.markbuikema.juliana32.R;
import com.markbuikema.juliana32.asynctask.PictureChanger;
import com.markbuikema.juliana32.model.FacebookNieuwsItem;
import com.markbuikema.juliana32.model.NieuwsItem;
import com.markbuikema.juliana32.model.NormalNieuwsItem;
import com.markbuikema.juliana32.model.TeaserNieuwsItem;
import com.markbuikema.juliana32.util.DataManager;
import com.markbuikema.juliana32.util.DateTimeUtils;
import com.markbuikema.juliana32.util.Tools;

public class NieuwsAdapter extends ArrayAdapter<NieuwsItem> {

	private Context context;
	private FragmentManager fm;

	public NieuwsAdapter(Context context) {
		super(context, 0);
		this.context = context;
		fm = ((FragmentActivity) context).getSupportFragmentManager();
	}

	@Override
	public NieuwsItem getItem(int position) {
		return DataManager.getInstance().getNieuwsItems().get(position);
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		NieuwsItem item = getItem(position);

		if (item instanceof NormalNieuwsItem) {

			if (convertView == null || (convertView != null && convertView.findViewById(R.id.titleView) == null))
				convertView = LayoutInflater.from(context).inflate(R.layout.listitem_nieuwsitem, null);

			TextView titleView = (TextView) convertView.findViewById(R.id.titleView);
			TextView subTitleView = (TextView) convertView.findViewById(R.id.subTitleView);
			titleView.setText(item.getTitle());
			subTitleView.setText(item.getSubTitle());
			TextView createdAtView = (TextView) convertView.findViewById(R.id.createdAtView);
			createdAtView.setText(Tools.getDateString(((NormalNieuwsItem) item).getCreatedAt()));

			convertView.requestLayout();
			return convertView;
		} else
			if (item instanceof TeaserNieuwsItem) {
				if (convertView == null || (convertView != null && convertView.findViewById(R.id.teaserImage) == null))
					convertView = LayoutInflater.from(context).inflate(R.layout.listitem_teaseritem, null);

				TextView titleView = (TextView) convertView.findViewById(R.id.teaserTitle);
				ImageView imageView = (ImageView) convertView.findViewById(R.id.teaserImage);
				titleView.setText(item.getTitle());
				Bitmap bmp = ((TeaserNieuwsItem) item).getImage();
				if (bmp != null)
					imageView.setImageBitmap(bmp);

				convertView.requestLayout();
				return convertView;
			} else {
				FacebookNieuwsItem fbItem = (FacebookNieuwsItem) item;

				if (fbItem.isPhoto()) {
					convertView = LayoutInflater.from(context).inflate(R.layout.listitem_facebookitem_photo, null);

					ViewPager pager = (ViewPager) convertView.findViewById(R.id.facebookPhotoPager);
					pager.setAdapter(new PhotoPagerAdapter(fm, fbItem));
					pager.setPageMargin(-70);
					pager.setHorizontalFadingEdgeEnabled(true);
					pager.setFadingEdgeLength(30);
					pager.setCurrentItem(0, true);

					return convertView;
				} else {
					if (convertView == null || (convertView != null && convertView.findViewById(R.id.facebook_content) == null))
						convertView = LayoutInflater.from(context).inflate(R.layout.listitem_facebookitem, null);
					TextView content = (TextView) convertView.findViewById(R.id.facebook_content);
					TextView likeCount = (TextView) convertView.findViewById(R.id.facebook_likecount);
					TextView commentCount = (TextView) convertView.findViewById(R.id.facebook_commentcount);
					TextView createdAt = (TextView) convertView.findViewById(R.id.facebook_date);

					if (fbItem.isPhoto())
						content.setText(fbItem.getTitle());
					else
						content.setText(fbItem.getContent());
					likeCount.setText(Integer.toString(fbItem.getLikeCount()));
					commentCount.setText(Integer.toString(fbItem.getCommentCount()));
					createdAt.setText(Tools.getDateString(fbItem.getCreatedAt()));

					convertView.requestLayout();
					return convertView;
				}
			}
	}

	@Override
	public long getItemId(int position) {
		return position;
	}

	public class PhotoPagerAdapter extends FragmentStatePagerAdapter {

		private static final String PHOTO_URL_PREFIX = "http://graph.facebook.com/";
		private static final String PHOTO_URL_SUFFIX = "/picture";
		private FacebookNieuwsItem item;

		public PhotoPagerAdapter(FragmentManager fm, FacebookNieuwsItem item) {
			super(fm);
			this.item = item;
		}

		@Override
		public Fragment getItem(int i) {
			Fragment fragment;
			if (i == 0) {
				fragment = new NormalSectionFragment();
				Bundle args = new Bundle();
				args.putString("title", item.getTitle());
				args.putString("createdAt",
						DateTimeUtils.getInstance(getContext()).getTimeDiffString(item.getCreatedAt().getTimeInMillis()));
				args.putInt("commentCount", item.getCommentCount());
				args.putInt("likeCount", item.getLikeCount());
				fragment.setArguments(args);
			} else {
				fragment = new PhotoSectionFragment();
				Bundle args = new Bundle();
				args.putString("picture_url", PHOTO_URL_PREFIX + item.getPhoto(i - 1) + PHOTO_URL_SUFFIX);
				fragment.setArguments(args);
			}
			return fragment;
		}

		@Override
		public CharSequence getPageTitle(int position) {
			return Integer.toString(position);
		}

		@Override
		public int getCount() {
			return item.getPhotoCount() + 1;
		}
	}

	/**
	 * A dummy fragment representing a section of the app, but that simply
	 * displays dummy text.
	 */
	public static class PhotoSectionFragment extends Fragment {

		public PhotoSectionFragment() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
			Bundle args = getArguments();
			String pictureUrl = args.getString("picture_url");
			View view = inflater.inflate(R.layout.fb_photo_item, null);
			final ImageView image = (ImageView) view.findViewById(R.id.facebookPhoto);
			new PictureChanger() {
				@Override
				protected void onPostExecute(Bitmap result) {
					image.setImageBitmap(result);
				}
			}.execute(pictureUrl);
			Log.d("FBPAGER", "done creating: " + pictureUrl);
			return view;
		}
	}

	public static class NormalSectionFragment extends Fragment {

		public NormalSectionFragment() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
			Bundle args = getArguments();
			View view = inflater.inflate(R.layout.listitem_facebookitem, null);
			TextView content = (TextView) view.findViewById(R.id.facebook_content);
			TextView likeCount = (TextView) view.findViewById(R.id.facebook_likecount);
			TextView commentCount = (TextView) view.findViewById(R.id.facebook_commentcount);
			TextView createdAt = (TextView) view.findViewById(R.id.facebook_date);

			content.setText(args.getString("title"));
			likeCount.setText(Integer.toString(args.getInt("likeCount")));
			commentCount.setText(Integer.toString(args.getInt("commentCount")));
			createdAt.setText(args.getString("createdAt"));

			LayoutParams params = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);
			view.setLayoutParams(params);

			Log.d("FBPAGER", "done creating text item for " + args.getString("title"));

			return view;
		}
	}
}