package com.markbuikema.juliana32.activities;

import java.io.Serializable;
import java.util.List;

import android.app.Activity;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.widget.Toast;

import com.markbuikema.juliana32.R;
import com.markbuikema.juliana32.model.NieuwsItem;
import com.markbuikema.juliana32.model.Team;
import com.markbuikema.juliana32.tools.NieuwsRetriever;

public class SplashActivity extends Activity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.splash);

		new ServerChecker() {
			protected void onPostExecute(Boolean result) {
				
			}
		}.execute();
	}

	private class ServerChecker extends AsyncTask<Void, Void, List<NieuwsItem>> {

		private static final long TIMEOUT = 6000;

		@Override
		protected List<NieuwsItem> doInBackground(Void... params) {

			NieuwsRetriever retriever = new NieuwsRetriever();
			retriever.execute();

			long timeout = System.currentTimeMillis() + TIMEOUT;
			while (System.currentTimeMillis() < timeout) {
				try {
					Thread.sleep(100);
					if (retriever.getStatusCode() != null) {
						if (retriever.getStatusCode().startsWith("2")) {

						} else {
							serverFailure();
						}
					}
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}

			return null;
		}

		private void serverFailure() {
			// TODO
		}

		private void timeout() {
			// TODO
		}
	}

	private enum Result {
		SUCCESS, TIMEOUT, ERROR
	}

	private class ServerCheckResult implements Serializable {
		private Result result;
		private List<NieuwsItem> nieuwsItems;
		private List<Team> teams;

	}
}
