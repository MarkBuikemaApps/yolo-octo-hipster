package com.markbuikema.juliana32.asynctask;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.os.AsyncTask;
import android.util.Log;

import com.markbuikema.juliana32.activity.MainActivity;
import com.markbuikema.juliana32.model.NieuwsItem;
import com.markbuikema.juliana32.model.NormalNieuwsItem;
import com.markbuikema.juliana32.util.FacebookHelper;

public class NieuwsRetriever extends AsyncTask<Void, NieuwsItem, List<NieuwsItem>> {

	final static long RETRIEVAL_TIMEOUT = 7000;
	private static final String TAG = "NieuwsRetriever";
	private static final String GET_URL = "http://www.svjuliana32.nl/nieuws/";
	private String statusCode;

	@Override
	protected List<NieuwsItem> doInBackground(Void... params) {
		Log.d("nieuwsloader", "1");
		HttpClient client = new DefaultHttpClient();

		final ArrayList<NieuwsItem> items = new ArrayList<NieuwsItem>();

		HttpGet get = new HttpGet(GET_URL);
		Log.d("nieuwsloader", "2");
		try {
			HttpResponse response = client.execute(get);
			Log.d("nieuwsloader", "3");
			statusCode = Integer.toString(response.getStatusLine().getStatusCode());
			String json = null;
			json = EntityUtils.toString(response.getEntity(), "UTF-8");
		} catch(IOException e) {}
		return null;
	}

	private NieuwsItem processNieuwsItemJSON(JSONObject obj) {
		Log.d(TAG, "Processing JSON Object for news item");
		try {
			int id = obj.getInt("id");
			String content = obj.getString("content");
			long createdAt = obj.getLong("createdAt");
			String title = obj.getString("title");
			String subTitle = obj.getString("subTitle");
			String detailUrl = obj.getString("detailUrl");
			NieuwsItem item = new NormalNieuwsItem(id, title, subTitle, content, createdAt, detailUrl);

			try {
				JSONArray photos = obj.getJSONArray("photos");
				for (int i = 0; i < photos.length(); i++) {
					String photo = photos.getString(i);
					item.addPhoto(photo);

					Log.d(TAG, "Photo added to newsitem " + item.getId() + ": " + photo);
				}
			} catch (JSONException e) {
				String photo = obj.getString("photos");
				item.addPhoto(photo);
			}
			return item;

		} catch (JSONException e) {
			e.printStackTrace();
		}
		return null;
	}

	public String getStatusCode() {
		return statusCode;
	}

}