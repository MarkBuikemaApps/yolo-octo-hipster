package com.markbuikema.juliana32.activities;

import java.io.Serializable;
import java.util.List;

import android.app.Activity;
import android.os.AsyncTask;
import android.os.Bundle;

import com.markbuikema.juliana32.R;
import com.markbuikema.juliana32.model.NieuwsItem;
import com.markbuikema.juliana32.model.Season;
import com.markbuikema.juliana32.model.Team;
import com.markbuikema.juliana32.model.TeaserNieuwsItem;
import com.markbuikema.juliana32.tools.NieuwsRetriever;
import com.markbuikema.juliana32.tools.TeamsRetriever;
import com.markbuikema.juliana32.tools.TeasersRetriever;

public class SplashActivity extends Activity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.splash);

		new DataLoader() {
			protected void onPostExecute(ServerCheckResult result) {

			}
		}.execute();
	}

	private class DataLoader extends AsyncTask<Void, Void, ServerCheckResult> {

		private static final long TIMEOUT = 6000;

		@Override
		protected ServerCheckResult doInBackground(Void... params) {

			
			TeasersRetriever teasersRetriever = new TeasersRetriever() {
				@Override
				protected void onPostExecute(List<TeaserNieuwsItem> result) {
					
				}
			};
			teasersRetriever.execute();
			
			NieuwsRetriever nieuwsRetriever = new NieuwsRetriever() {
				@Override
				protected void onPostExecute(List<NieuwsItem> result) {
					
				}
			};
			nieuwsRetriever.execute();
			
			TeamsRetriever teamsRetriever = new TeamsRetriever() {
				@Override
				protected void onPostExecute(List<Season> result) {
					
				}
			};
			teamsRetriever.execute();

			return null;
		}

	}

	private enum Result {
		SUCCESS, TIMEOUT, ERROR
	}

	private class ServerCheckResult implements Serializable {
		private List<NieuwsItem> nieuwsItems;
		private List<TeaserNieuwsItem> teaserItems;
		private List<Team> teams;

		
		
	}
}
