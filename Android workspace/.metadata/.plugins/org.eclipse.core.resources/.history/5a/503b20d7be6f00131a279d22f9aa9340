package com.markbuikema.juliana32.section;

import java.util.List;
import java.util.Observable;
import java.util.Observer;

import org.holoeverywhere.widget.ViewPager;

import com.markbuikema.juliana32.R;
import com.markbuikema.juliana32.activity.MainActivity;
import com.markbuikema.juliana32.adapter.TeamAdapter;
import com.markbuikema.juliana32.adapter.TeamsFragmentPagerAdapter;
import com.markbuikema.juliana32.asynctask.TeamsRetriever;
import com.markbuikema.juliana32.model.Team;
import com.markbuikema.juliana32.model.Team.Category;

public class Teams implements Observer {

	private MainActivity activity;
	private TeamAdapter[] teamAdapters;
	private static List<Team> teamList;

	public Teams( MainActivity act ) {
		activity = act;

		boolean isTablet = act.getResources().getBoolean( R.bool.isTablet );
		if ( isTablet )
			teamAdapters = new TeamAdapter[ 1 ];
		else
			teamAdapters = new TeamAdapter[ Category.values().length ];

		TeamsRetriever retriever = new TeamsRetriever( act ) {
			@Override
			protected void onPostExecute( List<Team> result ) {
				// TODO Auto-generated method stub
				super.onPostExecute( result );
			}
		};

		ViewPager mainView = (ViewPager) activity.findViewById( R.id.teamsView );
		TeamsFragmentPagerAdapter adapter = new TeamsFragmentPagerAdapter( act, teamAdapters );
		mainView.setAdapter( adapter );

	}

	@Override
	public void update( Observable arg0, Object arg1 ) {
		// TODO Auto-generated method stub

	}

	public Team findTeamById( int teamId ) {
		for ( Team team : teamList )
			if ( team.getId() == teamId )
				return team;
		return null;
	}

	public static List<Team> getTeams() {
		return teamList;
	}
}
